/*
 * Copyright (c) 2016, 2019 Oracle and/or its affiliates. All rights reserved. This
 * code is released under a tri EPL/GPL/LGPL license. You can use it,
 * redistribute it and/or modify it under the terms of the:
 *
 * Eclipse Public License version 1.0, or
 * GNU General Public License version 2, or
 * GNU Lesser General Public License version 2.1.
 */
package org.truffleruby.options;

// This file is automatically generated from options.yml with 'jt build options'

import javax.annotation.Generated;

import org.graalvm.options.OptionDescriptor;
import org.truffleruby.shared.options.DefaultExecutionAction;
import org.truffleruby.shared.options.ExecutionAction;
import org.truffleruby.shared.options.OptionsCatalog;
import org.truffleruby.shared.options.ShowHelp;
import org.truffleruby.shared.options.Verbosity;

import com.oracle.truffle.api.TruffleLanguage.Env;

@Generated("tool/generate-options.rb")
public class Options {

    public final String[] LOAD_PATHS;
    public final String[] REQUIRED_LIBRARIES;
    public final String WORKING_DIRECTORY;
    public final boolean DEBUG;
    public final Verbosity VERBOSITY;
    public final String SOURCE_ENCODING;
    public final String INTERNAL_ENCODING;
    public final String EXTERNAL_ENCODING;
    public final String HOME;
    public final boolean NO_HOME_PROVIDED;
    public final String LAUNCHER;
    public final String CORE_LOAD_PATH;
    public final boolean FROZEN_STRING_LITERALS;
    public final boolean RUBYGEMS;
    public final boolean DEFAULT_LAZY;
    public final boolean LAZY_RUBYGEMS;
    public final boolean PATCHING;
    public final boolean DID_YOU_MEAN;
    public final boolean HASHING_DETERMINISTIC;
    public final boolean EMBEDDED;
    public final boolean NATIVE_PLATFORM;
    public final boolean NATIVE_INTERRUPT;
    public final boolean HANDLE_INTERRUPT;
    public final boolean SINGLE_THREADED;
    public final boolean POLYGLOT_STDIO;
    public final boolean HOST_INTEROP;
    public final boolean TRACE_CALLS;
    public final boolean COVERAGE_GLOBAL;
    public final boolean CORE_AS_INTERNAL;
    public final boolean STDLIB_AS_INTERNAL;
    public final boolean LAZY_TRANSLATION_USER;
    public final boolean EXCEPTIONS_STORE_JAVA;
    public final boolean EXCEPTIONS_PRINT_JAVA;
    public final boolean EXCEPTIONS_PRINT_UNCAUGHT_JAVA;
    public final boolean EXCEPTIONS_PRINT_RUBY_FOR_JAVA;
    public final boolean EXCEPTIONS_TRANSLATE_ASSERT;
    public final boolean EXCEPTIONS_WARN_STACKOVERFLOW;
    public final boolean EXCEPTIONS_WARN_OUT_OF_MEMORY;
    public final boolean BACKTRACES_HIDE_CORE_FILES;
    public final boolean BACKTRACES_INTERLEAVE_JAVA;
    public final int BACKTRACES_LIMIT;
    public final boolean BACKTRACES_OMIT_UNUSED;
    public final boolean BACKTRACE_ON_INTERRUPT;
    public final boolean BACKTRACE_ON_SIGALRM;
    public final boolean BACKTRACE_ON_RAISE;
    public final boolean CEXTS;
    public final boolean CEXT_LOCK;
    public final String[] CEXTS_LIBRARY_REMAP;
    public final boolean OPTIONS_LOG;
    public final boolean LOG_LOAD;
    public final boolean LOG_FEATURE_LOCATION;
    public final boolean CEXTS_LOG_LOAD;
    public final boolean CEXTS_LOG_WARNINGS;
    public final boolean ARGV_GLOBALS;
    public final boolean IGNORE_LINES_BEFORE_RUBY_SHEBANG;
    public final boolean SYNTAX_CHECK;
    public final boolean SHOW_VERSION;
    public final boolean SHOW_COPYRIGHT;
    public final ShowHelp SHOW_HELP;
    public final ExecutionAction EXECUTION_ACTION;
    public final String TO_EXECUTE;
    public final boolean READ_RUBYOPT;
    public final DefaultExecutionAction DEFAULT_EXECUTION_ACTION;
    public final String[] ARGV_GLOBAL_VALUES;
    public final String[] ARGV_GLOBAL_FLAGS;
    public final boolean BUILDING_CORE_CEXTS;
    public final boolean LAZY_TRANSLATION_LOG;
    public final boolean LOG_DYNAMIC_CONSTANT_LOOKUP;
    public final boolean ROPE_PRINT_INTERN_STATS;
    public final boolean PREINITIALIZATION;
    public final boolean LAZY_BUILTINS;
    public final boolean LAZY_CORE_METHOD_NODES;
    public final boolean LAZY_TRANSLATION_CORE;
    public final boolean BASICOPS_INLINE;
    public final boolean ROPE_LAZY_SUBSTRINGS;
    public final int DEFAULT_CACHE;
    public final int METHOD_LOOKUP_CACHE;
    public final int DISPATCH_CACHE;
    public final int YIELD_CACHE;
    public final int METHOD_TO_PROC_CACHE;
    public final int IS_A_CACHE;
    public final int BIND_CACHE;
    public final int CONSTANT_CACHE;
    public final int INSTANCE_VARIABLE_CACHE;
    public final int BINDING_LOCAL_VARIABLE_CACHE;
    public final int SYMBOL_TO_PROC_CACHE;
    public final int ALLOCATE_CLASS_CACHE;
    public final int PACK_CACHE;
    public final int UNPACK_CACHE;
    public final int EVAL_CACHE;
    public final int CLASS_CACHE;
    public final int ENCODING_COMPATIBLE_QUERY_CACHE;
    public final int ENCODING_LOADED_CLASSES_CACHE;
    public final int THREAD_CACHE;
    public final int ROPE_CLASS_CACHE;
    public final int INTEROP_CONVERT_CACHE;
    public final int INTEROP_EXECUTE_CACHE;
    public final int INTEROP_INVOKE_CACHE;
    public final int INTEROP_NEW_CACHE;
    public final int TIME_FORMAT_CACHE;
    public final int POW_CACHE;
    public final int ARRAY_DUP_CACHE;
    public final int FRAME_VARIABLE_ACCESS_CACHE;
    public final int ARRAY_UNINITIALIZED_SIZE;
    public final int ARRAY_SMALL;
    public final int HASH_PACKED_ARRAY_MAX;
    public final int PACK_UNROLL_LIMIT;
    public final int PACK_RECOVER_LOOP_MIN;
    public final int CEXTS_MARKING_CACHE;
    public final int ROPE_DEPTH_THRESHOLD;
    public final int GLOBAL_VARIABLE_MAX_INVALIDATIONS;
    public final boolean CLONE_DEFAULT;
    public final boolean INLINE_DEFAULT;
    public final boolean CORE_ALWAYS_CLONE;
    public final boolean PRIMITIVE_CALLERS_ALWAYS_CLONE;
    public final boolean ALWAYS_SPLIT_HONOR;
    public final boolean INLINE_NEEDS_CALLER_FRAME;
    public final boolean YIELD_ALWAYS_CLONE;
    public final boolean YIELD_ALWAYS_INLINE;
    public final boolean METHODMISSING_ALWAYS_CLONE;
    public final boolean METHODMISSING_ALWAYS_INLINE;
    public final boolean CALL_WITH_BLOCK_ALWAYS_CLONE;
    public final boolean REGEXP_INSTRUMENT_CREATION;
    public final boolean REGEXP_INSTRUMENT_MATCH;
    public final boolean METRICS_TIME_PARSING_FILE;
    public final boolean METRICS_TIME_REQUIRE;
    public final boolean SHARED_OBJECTS_ENABLED;
    public final boolean SHARED_OBJECTS_DEBUG;
    public final boolean SHARED_OBJECTS_FORCE;
    public final boolean SHARED_OBJECTS_SHARE_ALL;
    
    Options(OptionsBuilder builder, Env env) {
        LOAD_PATHS = String[].class.cast(builder.getOrDefault(OptionsCatalog.LOAD_PATHS));
        REQUIRED_LIBRARIES = String[].class.cast(builder.getOrDefault(OptionsCatalog.REQUIRED_LIBRARIES));
        WORKING_DIRECTORY = String.class.cast(builder.getOrDefault(OptionsCatalog.WORKING_DIRECTORY));
        DEBUG = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.DEBUG));
        VERBOSITY = Verbosity.class.cast(builder.getOrDefault(OptionsCatalog.VERBOSITY));
        SOURCE_ENCODING = String.class.cast(builder.getOrDefault(OptionsCatalog.SOURCE_ENCODING));
        INTERNAL_ENCODING = String.class.cast(builder.getOrDefault(OptionsCatalog.INTERNAL_ENCODING));
        EXTERNAL_ENCODING = String.class.cast(builder.getOrDefault(OptionsCatalog.EXTERNAL_ENCODING));
        HOME = String.class.cast(builder.getOrDefault(OptionsCatalog.HOME));
        NO_HOME_PROVIDED = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.NO_HOME_PROVIDED));
        LAUNCHER = String.class.cast(builder.getOrDefault(OptionsCatalog.LAUNCHER));
        CORE_LOAD_PATH = String.class.cast(builder.getOrDefault(OptionsCatalog.CORE_LOAD_PATH));
        FROZEN_STRING_LITERALS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.FROZEN_STRING_LITERALS));
        RUBYGEMS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.RUBYGEMS));
        DEFAULT_LAZY = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.DEFAULT_LAZY));
        LAZY_RUBYGEMS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.LAZY_RUBYGEMS, DEFAULT_LAZY));
        PATCHING = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.PATCHING));
        DID_YOU_MEAN = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.DID_YOU_MEAN));
        HASHING_DETERMINISTIC = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.HASHING_DETERMINISTIC));
        EMBEDDED = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.EMBEDDED));
        NATIVE_PLATFORM = env.isNativeAccessAllowed() && Boolean.class.cast(builder.getOrDefault(OptionsCatalog.NATIVE_PLATFORM));
        NATIVE_INTERRUPT = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.NATIVE_INTERRUPT, NATIVE_PLATFORM));
        HANDLE_INTERRUPT = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.HANDLE_INTERRUPT, !EMBEDDED));
        SINGLE_THREADED = !env.isCreateThreadAllowed() || Boolean.class.cast(builder.getOrDefault(OptionsCatalog.SINGLE_THREADED, EMBEDDED));
        POLYGLOT_STDIO = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.POLYGLOT_STDIO, EMBEDDED || !NATIVE_PLATFORM));
        HOST_INTEROP = env.isHostLookupAllowed() && Boolean.class.cast(builder.getOrDefault(OptionsCatalog.HOST_INTEROP));
        TRACE_CALLS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.TRACE_CALLS));
        COVERAGE_GLOBAL = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.COVERAGE_GLOBAL));
        CORE_AS_INTERNAL = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.CORE_AS_INTERNAL));
        STDLIB_AS_INTERNAL = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.STDLIB_AS_INTERNAL));
        LAZY_TRANSLATION_USER = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.LAZY_TRANSLATION_USER));
        EXCEPTIONS_STORE_JAVA = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.EXCEPTIONS_STORE_JAVA));
        EXCEPTIONS_PRINT_JAVA = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.EXCEPTIONS_PRINT_JAVA));
        EXCEPTIONS_PRINT_UNCAUGHT_JAVA = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.EXCEPTIONS_PRINT_UNCAUGHT_JAVA));
        EXCEPTIONS_PRINT_RUBY_FOR_JAVA = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.EXCEPTIONS_PRINT_RUBY_FOR_JAVA));
        EXCEPTIONS_TRANSLATE_ASSERT = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.EXCEPTIONS_TRANSLATE_ASSERT));
        EXCEPTIONS_WARN_STACKOVERFLOW = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.EXCEPTIONS_WARN_STACKOVERFLOW));
        EXCEPTIONS_WARN_OUT_OF_MEMORY = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.EXCEPTIONS_WARN_OUT_OF_MEMORY));
        BACKTRACES_HIDE_CORE_FILES = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.BACKTRACES_HIDE_CORE_FILES));
        BACKTRACES_INTERLEAVE_JAVA = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.BACKTRACES_INTERLEAVE_JAVA));
        BACKTRACES_LIMIT = Integer.class.cast(builder.getOrDefault(OptionsCatalog.BACKTRACES_LIMIT));
        BACKTRACES_OMIT_UNUSED = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.BACKTRACES_OMIT_UNUSED));
        BACKTRACE_ON_INTERRUPT = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.BACKTRACE_ON_INTERRUPT));
        BACKTRACE_ON_SIGALRM = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.BACKTRACE_ON_SIGALRM, !EMBEDDED));
        BACKTRACE_ON_RAISE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.BACKTRACE_ON_RAISE));
        CEXTS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.CEXTS));
        CEXT_LOCK = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.CEXT_LOCK));
        CEXTS_LIBRARY_REMAP = String[].class.cast(builder.getOrDefault(OptionsCatalog.CEXTS_LIBRARY_REMAP));
        OPTIONS_LOG = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.OPTIONS_LOG));
        LOG_LOAD = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.LOG_LOAD));
        LOG_FEATURE_LOCATION = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.LOG_FEATURE_LOCATION));
        CEXTS_LOG_LOAD = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.CEXTS_LOG_LOAD));
        CEXTS_LOG_WARNINGS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.CEXTS_LOG_WARNINGS));
        ARGV_GLOBALS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.ARGV_GLOBALS));
        IGNORE_LINES_BEFORE_RUBY_SHEBANG = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.IGNORE_LINES_BEFORE_RUBY_SHEBANG));
        SYNTAX_CHECK = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.SYNTAX_CHECK));
        SHOW_VERSION = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.SHOW_VERSION));
        SHOW_COPYRIGHT = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.SHOW_COPYRIGHT));
        SHOW_HELP = ShowHelp.class.cast(builder.getOrDefault(OptionsCatalog.SHOW_HELP));
        EXECUTION_ACTION = ExecutionAction.class.cast(builder.getOrDefault(OptionsCatalog.EXECUTION_ACTION));
        TO_EXECUTE = String.class.cast(builder.getOrDefault(OptionsCatalog.TO_EXECUTE));
        READ_RUBYOPT = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.READ_RUBYOPT));
        DEFAULT_EXECUTION_ACTION = DefaultExecutionAction.class.cast(builder.getOrDefault(OptionsCatalog.DEFAULT_EXECUTION_ACTION));
        ARGV_GLOBAL_VALUES = String[].class.cast(builder.getOrDefault(OptionsCatalog.ARGV_GLOBAL_VALUES));
        ARGV_GLOBAL_FLAGS = String[].class.cast(builder.getOrDefault(OptionsCatalog.ARGV_GLOBAL_FLAGS));
        BUILDING_CORE_CEXTS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.BUILDING_CORE_CEXTS));
        LAZY_TRANSLATION_LOG = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.LAZY_TRANSLATION_LOG));
        LOG_DYNAMIC_CONSTANT_LOOKUP = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.LOG_DYNAMIC_CONSTANT_LOOKUP));
        ROPE_PRINT_INTERN_STATS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.ROPE_PRINT_INTERN_STATS));
        PREINITIALIZATION = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.PREINITIALIZATION));
        LAZY_BUILTINS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.LAZY_BUILTINS, DEFAULT_LAZY));
        LAZY_CORE_METHOD_NODES = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.LAZY_CORE_METHOD_NODES, DEFAULT_LAZY));
        LAZY_TRANSLATION_CORE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.LAZY_TRANSLATION_CORE, DEFAULT_LAZY));
        BASICOPS_INLINE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.BASICOPS_INLINE));
        ROPE_LAZY_SUBSTRINGS = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.ROPE_LAZY_SUBSTRINGS));
        DEFAULT_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.DEFAULT_CACHE));
        METHOD_LOOKUP_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.METHOD_LOOKUP_CACHE, DEFAULT_CACHE));
        DISPATCH_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.DISPATCH_CACHE, DEFAULT_CACHE));
        YIELD_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.YIELD_CACHE, DEFAULT_CACHE));
        METHOD_TO_PROC_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.METHOD_TO_PROC_CACHE, DEFAULT_CACHE));
        IS_A_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.IS_A_CACHE, DEFAULT_CACHE));
        BIND_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.BIND_CACHE, DEFAULT_CACHE));
        CONSTANT_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.CONSTANT_CACHE, DEFAULT_CACHE));
        INSTANCE_VARIABLE_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.INSTANCE_VARIABLE_CACHE, DEFAULT_CACHE));
        BINDING_LOCAL_VARIABLE_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.BINDING_LOCAL_VARIABLE_CACHE, DEFAULT_CACHE));
        SYMBOL_TO_PROC_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.SYMBOL_TO_PROC_CACHE, DEFAULT_CACHE));
        ALLOCATE_CLASS_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.ALLOCATE_CLASS_CACHE, DEFAULT_CACHE));
        PACK_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.PACK_CACHE, DEFAULT_CACHE));
        UNPACK_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.UNPACK_CACHE, DEFAULT_CACHE));
        EVAL_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.EVAL_CACHE, DEFAULT_CACHE));
        CLASS_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.CLASS_CACHE, DEFAULT_CACHE));
        ENCODING_COMPATIBLE_QUERY_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.ENCODING_COMPATIBLE_QUERY_CACHE, DEFAULT_CACHE));
        ENCODING_LOADED_CLASSES_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.ENCODING_LOADED_CLASSES_CACHE, DEFAULT_CACHE));
        THREAD_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.THREAD_CACHE, DEFAULT_CACHE));
        ROPE_CLASS_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.ROPE_CLASS_CACHE));
        INTEROP_CONVERT_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.INTEROP_CONVERT_CACHE, DEFAULT_CACHE));
        INTEROP_EXECUTE_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.INTEROP_EXECUTE_CACHE, DEFAULT_CACHE));
        INTEROP_INVOKE_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.INTEROP_INVOKE_CACHE, DEFAULT_CACHE));
        INTEROP_NEW_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.INTEROP_NEW_CACHE, DEFAULT_CACHE));
        TIME_FORMAT_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.TIME_FORMAT_CACHE, DEFAULT_CACHE));
        POW_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.POW_CACHE, DEFAULT_CACHE));
        ARRAY_DUP_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.ARRAY_DUP_CACHE));
        FRAME_VARIABLE_ACCESS_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.FRAME_VARIABLE_ACCESS_CACHE));
        ARRAY_UNINITIALIZED_SIZE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.ARRAY_UNINITIALIZED_SIZE));
        ARRAY_SMALL = Integer.class.cast(builder.getOrDefault(OptionsCatalog.ARRAY_SMALL));
        HASH_PACKED_ARRAY_MAX = Integer.class.cast(builder.getOrDefault(OptionsCatalog.HASH_PACKED_ARRAY_MAX));
        PACK_UNROLL_LIMIT = Integer.class.cast(builder.getOrDefault(OptionsCatalog.PACK_UNROLL_LIMIT));
        PACK_RECOVER_LOOP_MIN = Integer.class.cast(builder.getOrDefault(OptionsCatalog.PACK_RECOVER_LOOP_MIN));
        CEXTS_MARKING_CACHE = Integer.class.cast(builder.getOrDefault(OptionsCatalog.CEXTS_MARKING_CACHE));
        ROPE_DEPTH_THRESHOLD = Integer.class.cast(builder.getOrDefault(OptionsCatalog.ROPE_DEPTH_THRESHOLD));
        GLOBAL_VARIABLE_MAX_INVALIDATIONS = Integer.class.cast(builder.getOrDefault(OptionsCatalog.GLOBAL_VARIABLE_MAX_INVALIDATIONS));
        CLONE_DEFAULT = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.CLONE_DEFAULT));
        INLINE_DEFAULT = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.INLINE_DEFAULT));
        CORE_ALWAYS_CLONE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.CORE_ALWAYS_CLONE, CLONE_DEFAULT));
        PRIMITIVE_CALLERS_ALWAYS_CLONE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.PRIMITIVE_CALLERS_ALWAYS_CLONE, CLONE_DEFAULT));
        ALWAYS_SPLIT_HONOR = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.ALWAYS_SPLIT_HONOR, CLONE_DEFAULT));
        INLINE_NEEDS_CALLER_FRAME = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.INLINE_NEEDS_CALLER_FRAME, INLINE_DEFAULT));
        YIELD_ALWAYS_CLONE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.YIELD_ALWAYS_CLONE, CLONE_DEFAULT));
        YIELD_ALWAYS_INLINE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.YIELD_ALWAYS_INLINE, INLINE_DEFAULT));
        METHODMISSING_ALWAYS_CLONE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.METHODMISSING_ALWAYS_CLONE, CLONE_DEFAULT));
        METHODMISSING_ALWAYS_INLINE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.METHODMISSING_ALWAYS_INLINE, INLINE_DEFAULT));
        CALL_WITH_BLOCK_ALWAYS_CLONE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.CALL_WITH_BLOCK_ALWAYS_CLONE, CLONE_DEFAULT));
        REGEXP_INSTRUMENT_CREATION = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.REGEXP_INSTRUMENT_CREATION));
        REGEXP_INSTRUMENT_MATCH = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.REGEXP_INSTRUMENT_MATCH));
        METRICS_TIME_PARSING_FILE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.METRICS_TIME_PARSING_FILE));
        METRICS_TIME_REQUIRE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.METRICS_TIME_REQUIRE));
        SHARED_OBJECTS_ENABLED = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.SHARED_OBJECTS_ENABLED));
        SHARED_OBJECTS_DEBUG = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.SHARED_OBJECTS_DEBUG));
        SHARED_OBJECTS_FORCE = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.SHARED_OBJECTS_FORCE));
        SHARED_OBJECTS_SHARE_ALL = Boolean.class.cast(builder.getOrDefault(OptionsCatalog.SHARED_OBJECTS_SHARE_ALL));
    }

    public Object fromDescriptor(OptionDescriptor descriptor) {
        switch (descriptor.getName()) {
            case "ruby.load-paths":
                return LOAD_PATHS;
            case "ruby.required-libraries":
                return REQUIRED_LIBRARIES;
            case "ruby.working-directory":
                return WORKING_DIRECTORY;
            case "ruby.debug":
                return DEBUG;
            case "ruby.verbose":
                return VERBOSITY;
            case "ruby.source-encoding":
                return SOURCE_ENCODING;
            case "ruby.internal-encoding":
                return INTERNAL_ENCODING;
            case "ruby.external-encoding":
                return EXTERNAL_ENCODING;
            case "ruby.home":
                return HOME;
            case "ruby.no_home_provided":
                return NO_HOME_PROVIDED;
            case "ruby.launcher":
                return LAUNCHER;
            case "ruby.core.load_path":
                return CORE_LOAD_PATH;
            case "ruby.frozen_string_literals":
                return FROZEN_STRING_LITERALS;
            case "ruby.rubygems":
                return RUBYGEMS;
            case "ruby.lazy.default":
                return DEFAULT_LAZY;
            case "ruby.rubygems.lazy":
                return LAZY_RUBYGEMS;
            case "ruby.patching":
                return PATCHING;
            case "ruby.did_you_mean":
                return DID_YOU_MEAN;
            case "ruby.hashing.deterministic":
                return HASHING_DETERMINISTIC;
            case "ruby.embedded":
                return EMBEDDED;
            case "ruby.platform.native":
                return NATIVE_PLATFORM;
            case "ruby.platform.native_interrupt":
                return NATIVE_INTERRUPT;
            case "ruby.platform.handle_interrupt":
                return HANDLE_INTERRUPT;
            case "ruby.single_threaded":
                return SINGLE_THREADED;
            case "ruby.polyglot.stdio":
                return POLYGLOT_STDIO;
            case "ruby.interop.host":
                return HOST_INTEROP;
            case "ruby.trace.calls":
                return TRACE_CALLS;
            case "ruby.coverage.global":
                return COVERAGE_GLOBAL;
            case "ruby.core_as_internal":
                return CORE_AS_INTERNAL;
            case "ruby.stdlib_as_internal":
                return STDLIB_AS_INTERNAL;
            case "ruby.lazy_translation.user":
                return LAZY_TRANSLATION_USER;
            case "ruby.exceptions.store_java":
                return EXCEPTIONS_STORE_JAVA;
            case "ruby.exceptions.print_java":
                return EXCEPTIONS_PRINT_JAVA;
            case "ruby.exceptions.print_uncaught_java":
                return EXCEPTIONS_PRINT_UNCAUGHT_JAVA;
            case "ruby.exceptions.print_ruby_for_java":
                return EXCEPTIONS_PRINT_RUBY_FOR_JAVA;
            case "ruby.exceptions.translate_assert":
                return EXCEPTIONS_TRANSLATE_ASSERT;
            case "ruby.exceptions.warn_stackoverflow":
                return EXCEPTIONS_WARN_STACKOVERFLOW;
            case "ruby.exceptions.warn_out_of_memory":
                return EXCEPTIONS_WARN_OUT_OF_MEMORY;
            case "ruby.backtraces.hide_core_files":
                return BACKTRACES_HIDE_CORE_FILES;
            case "ruby.backtraces.interleave_java":
                return BACKTRACES_INTERLEAVE_JAVA;
            case "ruby.backtraces.limit":
                return BACKTRACES_LIMIT;
            case "ruby.backtraces.omit_unused":
                return BACKTRACES_OMIT_UNUSED;
            case "ruby.backtraces.on_interrupt":
                return BACKTRACE_ON_INTERRUPT;
            case "ruby.backtraces.sigalrm":
                return BACKTRACE_ON_SIGALRM;
            case "ruby.backtraces.raise":
                return BACKTRACE_ON_RAISE;
            case "ruby.cexts":
                return CEXTS;
            case "ruby.cexts.lock":
                return CEXT_LOCK;
            case "ruby.cexts.remap":
                return CEXTS_LIBRARY_REMAP;
            case "ruby.options.log":
                return OPTIONS_LOG;
            case "ruby.log.load":
                return LOG_LOAD;
            case "ruby.log.feature_location":
                return LOG_FEATURE_LOCATION;
            case "ruby.cexts.log.load":
                return CEXTS_LOG_LOAD;
            case "ruby.cexts.log.warnings":
                return CEXTS_LOG_WARNINGS;
            case "ruby.argv_globals":
                return ARGV_GLOBALS;
            case "ruby.ignore_lines_before_ruby_shebang":
                return IGNORE_LINES_BEFORE_RUBY_SHEBANG;
            case "ruby.syntax_check":
                return SYNTAX_CHECK;
            case "ruby.show_version":
                return SHOW_VERSION;
            case "ruby.show_copyright":
                return SHOW_COPYRIGHT;
            case "ruby.show_help":
                return SHOW_HELP;
            case "ruby.execution_action":
                return EXECUTION_ACTION;
            case "ruby.to_execute":
                return TO_EXECUTE;
            case "ruby.read_rubyopt":
                return READ_RUBYOPT;
            case "ruby.default_execution_action":
                return DEFAULT_EXECUTION_ACTION;
            case "ruby.argv_global_values":
                return ARGV_GLOBAL_VALUES;
            case "ruby.argv_global_flags":
                return ARGV_GLOBAL_FLAGS;
            case "ruby.building.core.cexts":
                return BUILDING_CORE_CEXTS;
            case "ruby.lazy_translation.log":
                return LAZY_TRANSLATION_LOG;
            case "ruby.constant.dynamic_lookup.log":
                return LOG_DYNAMIC_CONSTANT_LOOKUP;
            case "ruby.rope.print_intern_stats":
                return ROPE_PRINT_INTERN_STATS;
            case "ruby.preinit":
                return PREINITIALIZATION;
            case "ruby.lazy_builtins":
                return LAZY_BUILTINS;
            case "ruby.lazy_core_method_nodes":
                return LAZY_CORE_METHOD_NODES;
            case "ruby.lazy_translation.core":
                return LAZY_TRANSLATION_CORE;
            case "ruby.basic_ops.inline":
                return BASICOPS_INLINE;
            case "ruby.rope.lazy_substrings":
                return ROPE_LAZY_SUBSTRINGS;
            case "ruby.default_cache":
                return DEFAULT_CACHE;
            case "ruby.method_lookup.cache":
                return METHOD_LOOKUP_CACHE;
            case "ruby.dispatch.cache":
                return DISPATCH_CACHE;
            case "ruby.yield.cache":
                return YIELD_CACHE;
            case "ruby.to_proc.cache":
                return METHOD_TO_PROC_CACHE;
            case "ruby.is_a.cache":
                return IS_A_CACHE;
            case "ruby.bind.cache":
                return BIND_CACHE;
            case "ruby.constant.cache":
                return CONSTANT_CACHE;
            case "ruby.instance_variable.cache":
                return INSTANCE_VARIABLE_CACHE;
            case "ruby.binding_local_variable.cache":
                return BINDING_LOCAL_VARIABLE_CACHE;
            case "ruby.symbol_to_proc.cache":
                return SYMBOL_TO_PROC_CACHE;
            case "ruby.allocate_class.cache":
                return ALLOCATE_CLASS_CACHE;
            case "ruby.pack.cache":
                return PACK_CACHE;
            case "ruby.unpack.cache":
                return UNPACK_CACHE;
            case "ruby.eval.cache":
                return EVAL_CACHE;
            case "ruby.class.cache":
                return CLASS_CACHE;
            case "ruby.encoding_compatible_query.cache":
                return ENCODING_COMPATIBLE_QUERY_CACHE;
            case "ruby.encoding_loaded_classes.cache":
                return ENCODING_LOADED_CLASSES_CACHE;
            case "ruby.thread.cache":
                return THREAD_CACHE;
            case "ruby.rope_class.cache":
                return ROPE_CLASS_CACHE;
            case "ruby.interop.convert.cache":
                return INTEROP_CONVERT_CACHE;
            case "ruby.interop.execute.cache":
                return INTEROP_EXECUTE_CACHE;
            case "ruby.interop.invoke.cache":
                return INTEROP_INVOKE_CACHE;
            case "ruby.interop.new.cache":
                return INTEROP_NEW_CACHE;
            case "ruby.time.format.cache":
                return TIME_FORMAT_CACHE;
            case "ruby.integer.pow.cache":
                return POW_CACHE;
            case "ruby.array.dup.cache":
                return ARRAY_DUP_CACHE;
            case "ruby.frame.variable.access.cache":
                return FRAME_VARIABLE_ACCESS_CACHE;
            case "ruby.array.uninitialized_size":
                return ARRAY_UNINITIALIZED_SIZE;
            case "ruby.array.small":
                return ARRAY_SMALL;
            case "ruby.hash.packed_array.max":
                return HASH_PACKED_ARRAY_MAX;
            case "ruby.pack.unroll":
                return PACK_UNROLL_LIMIT;
            case "ruby.pack.recover":
                return PACK_RECOVER_LOOP_MIN;
            case "ruby.cexts.marking.cache":
                return CEXTS_MARKING_CACHE;
            case "ruby.rope.depth_threshold":
                return ROPE_DEPTH_THRESHOLD;
            case "ruby.global_variable.max_invalidations":
                return GLOBAL_VARIABLE_MAX_INVALIDATIONS;
            case "ruby.clone.default":
                return CLONE_DEFAULT;
            case "ruby.inline.default":
                return INLINE_DEFAULT;
            case "ruby.core.always_clone":
                return CORE_ALWAYS_CLONE;
            case "ruby.primitive_callers.always_clone":
                return PRIMITIVE_CALLERS_ALWAYS_CLONE;
            case "ruby.always_split.honor":
                return ALWAYS_SPLIT_HONOR;
            case "ruby.inline_needs_caller_frame":
                return INLINE_NEEDS_CALLER_FRAME;
            case "ruby.yield.always_clone":
                return YIELD_ALWAYS_CLONE;
            case "ruby.yield.always_inline":
                return YIELD_ALWAYS_INLINE;
            case "ruby.method_missing.always_clone":
                return METHODMISSING_ALWAYS_CLONE;
            case "ruby.method_missing.always_inline":
                return METHODMISSING_ALWAYS_INLINE;
            case "ruby.call_with_block.always_clone":
                return CALL_WITH_BLOCK_ALWAYS_CLONE;
            case "ruby.regexp.instrument-creation":
                return REGEXP_INSTRUMENT_CREATION;
            case "ruby.regexp.instrument-match":
                return REGEXP_INSTRUMENT_MATCH;
            case "ruby.metrics.time.parsing.file":
                return METRICS_TIME_PARSING_FILE;
            case "ruby.metrics.time.require":
                return METRICS_TIME_REQUIRE;
            case "ruby.shared.objects":
                return SHARED_OBJECTS_ENABLED;
            case "ruby.shared.objects.debug":
                return SHARED_OBJECTS_DEBUG;
            case "ruby.shared.objects.force":
                return SHARED_OBJECTS_FORCE;
            case "ruby.shared.objects.share_all":
                return SHARED_OBJECTS_SHARE_ALL;
            default:
                return null;
        }
    }
}
